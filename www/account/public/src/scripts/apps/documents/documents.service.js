(function () {
    'use strict';

    angular.module('documents.service', [])
        .service('Documents', function () {
            this.getDocuments = function () {
                return [
                    {
                        document_id: 1,
                        title: 'AngularJS',
                        content: '<h1> <a name="user-content-angularjs-" class="anchor" href="#angularjs-" aria-hidden="true"><span class="octicon octicon-link"></span></a>AngularJS <a href="https://travis-ci.org/angular/angular.js"><img src="https://camo.githubusercontent.com/cc790c12ed8699e6e9fdb9a37e297fb9afde5c3b/68747470733a2f2f7472617669732d63692e6f72672f616e67756c61722f616e67756c61722e6a732e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/angular/angular.js.svg?branch=master" style="max-width:100%;"></a> </h1> <p>AngularJS lets you write client-side web applications as if you had a smarter browser. It lets you use good old HTML (or HAML, Jade and friends!) as your template language and lets you extend HTML’s syntax to express your application’s components clearly and succinctly. It automatically synchronizes data from your UI (view) with your JavaScript objects (model) through 2-way data binding. To help you structure your application better and make it easy to test, AngularJS teaches the browser how to do dependency injection and inversion of control.</p> <p>Oh yeah and it helps with server-side communication, taming async callbacks with promises and deferreds. It also makes client-side navigation and deeplinking with hashbang urls or HTML5 pushState a piece of cake. The best of all: it makes development fun!</p> <ul> <li>Web site: <a href="http://angularjs.org">http://angularjs.org</a> </li> <li>Tutorial: <a href="http://docs.angularjs.org/tutorial">http://docs.angularjs.org/tutorial</a> </li> <li>API Docs: <a href="http://docs.angularjs.org/api">http://docs.angularjs.org/api</a> </li> <li>Developer Guide: <a href="http://docs.angularjs.org/guide">http://docs.angularjs.org/guide</a> </li> <li>Contribution guidelines: <a href="https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md">CONTRIBUTING.md</a> </li> <li>Dashboard: <a href="http://dashboard.angularjs.org">http://dashboard.angularjs.org</a> </li> </ul><h2> <a name="user-content-building-angularjs" class="anchor" href="#building-angularjs" aria-hidden="true"><span class="octicon octicon-link"></span></a>Building AngularJS</h2> <p><a href="http://docs.angularjs.org/misc/contribute">Once you have your environment setup</a> just run:</p> <pre><code>grunt package </code></pre> <h2> <a name="user-content-running-tests" class="anchor" href="#running-tests" aria-hidden="true"><span class="octicon octicon-link"></span></a>Running Tests</h2> <p>To execute all unit tests, use:</p> <pre><code>grunt test:unit </code></pre> <p>To execute end-to-end (e2e) tests, use:</p> <pre><code>grunt package grunt test:e2e </code></pre> <p>To learn more about the grunt tasks, run <code>grunt --help</code> and also read our <a href="https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md">contribution guidelines</a>.</p> <p><a href="https://github.com/igrigorik/ga-beacon"><img src="https://camo.githubusercontent.com/e5cb328a5f588478488defdad0a7d1579a89f527/68747470733a2f2f67612d626561636f6e2e61707073706f742e636f6d2f55412d383539343334362d31312f616e67756c61722e6a732f524541444d452e6d643f706978656c" alt="Analytics" data-canonical-src="https://ga-beacon.appspot.com/UA-8594346-11/angular.js/README.md?pixel" style="max-width:100%;"></a></p>',
                        created_by: 'Jesse Holmes',
                        created_date: '2014-04-13 15:50',
                        favourite: true,
                        last_update: [
                            {
                                user: 'Jane Doe',
                                datetime: '2014-10-13T16:50:11',
                                avatar: 'img/avatar1.jpg'
                            }
                        ],
                        comments: [
                            {
                                user: 'Jesse Holmes',
                                datetime: '2014-04-13T16:50:11',
                                comment: 'Nice1 template Dudeee',
                                avatar: 'img/avatar1.jpg'
                            },
                            {
                                user: 'Jesse Holmes',
                                datetime: '2014-04-13T16:55:11',
                                comment: 'hohooho',
                                avatar: 'img/avatar1.jpg'
                            },
                            {
                                user: 'Saul Doe',
                                owner: true,
                                datetime: '2014-04-13T17:55:11',
                                comment: 'thx buddy',
                                avatar: 'img/avatar2.jpg'
                            }
                        ]
                    },
                    {
                        document_id: 2,
                        title: 'Jquery',
                        content: '<h1> <a id="user-content-jquery--new-wave-javascript" class="anchor" href="#jquery--new-wave-javascript" aria-hidden="true"><span class="octicon octicon-link"></span></a> <a href="http://jquery.com/">jQuery</a> — New Wave JavaScript</h1> <h2> <a id="user-content-contribution-guides" class="anchor" href="#contribution-guides" aria-hidden="true"><span class="octicon octicon-link"></span></a>Contribution Guides</h2> <p>In the spirit of open source software development, jQuery always encourages community code contribution. To help you get started and before you jump into writing code, be sure to read these important contribution guidelines thoroughly:</p> <ol class="task-list"> <li><a href="http://contribute.jquery.org/">Getting Involved</a></li> <li><a href="http://contribute.jquery.org/style-guide/js/">Core Style Guide</a></li> <li><a href="http://contribute.jquery.org/code/">Writing Code for jQuery Foundation Projects</a></li> </ol> <h2> <a id="user-content-environments-in-which-to-use-jquery" class="anchor" href="#environments-in-which-to-use-jquery" aria-hidden="true"><span class="octicon octicon-link"></span></a>Environments in which to use jQuery</h2> <ul class="task-list"> <li> <a href="http://jquery.com/browser-support/">Browser support</a> differs between the master branch and the compat branch. Specifically, the master branch does not support legacy browsers such as IE8. The jQuery team continues to provide support for legacy browsers on the compat branch. Use the latest compat release if support for those browsers is required. See <a href="http://jquery.com/browser-support/">browser support</a> for more info.</li> <li>To use jQuery in Node, browser extensions, and other non-browser environments, use only master branch releases given the name "jquery" rather than "jquery-compat". The compat branch does not support these environments.</li> </ul> <h2> <a id="user-content-what-you-need-to-build-your-own-jquery" class="anchor" href="#what-you-need-to-build-your-own-jquery" aria-hidden="true"><span class="octicon octicon-link"></span></a>What you need to build your own jQuery</h2> <p>In order to build jQuery, you need to have the latest Node.js/npm and git 1.7 or later. Earlier versions might work, but are not supported.</p> <p>For Windows, you have to download and install <a href="http://git-scm.com/downloads">git</a> and <a href="http://nodejs.org/download/">Node.js</a>.</p> <p>OS X users should install <a href="http://brew.sh/">Homebrew</a>. Once Homebrew is installed, run <code>brew install git</code> to install git, and <code>brew install node</code> to install Node.js.</p> <p>Linux/BSD users should use their appropriate package managers to install git and Node.js, or build from source if you swing that way. Easy-peasy.</p> <h2> <a id="user-content-how-to-build-your-own-jquery" class="anchor" href="#how-to-build-your-own-jquery" aria-hidden="true"><span class="octicon octicon-link"></span></a>How to build your own jQuery</h2> <p>Clone a copy of the main jQuery git repo by running:</p> <div class="highlight highlight-bash"><pre>git clone git://github.com/jquery/jquery.git</pre></div> <p>Enter the jquery directory and run the build script:</p> <div class="highlight highlight-bash"><pre><span class="pl-c1">cd</span> jquery <span class="pl-k">&amp;&amp;</span> npm run build</pre></div> <p>The built version of jQuery will be put in the <code>dist/</code> subdirectory, along with the minified copy and associated map file.</p> <p>If you want to create custom build or help with jQuery development, it would be better to install <a href="https://github.com/gruntjs/grunt-cli">grunt command line interface</a> as a global package:</p> <pre><code>npm install -g grunt-cli </code></pre> <p>Make sure you have <code>grunt</code> installed by testing:</p> <pre><code>grunt -V </code></pre> <p>Now by running the <code>grunt</code> command, in the jquery directory, you can build a full version of jQuery, just like with an <code>npm run build</code> command:</p> <pre><code>grunt </code></pre> <p>There are many other tasks available for jQuery Core:</p> <pre><code>grunt -help </code></pre> <h3> <a id="user-content-modules" class="anchor" href="#modules" aria-hidden="true"><span class="octicon octicon-link"></span></a>Modules</h3> <p>Special builds can be created that exclude subsets of jQuery functionality. This allows for smaller custom builds when the builder is certain that those parts of jQuery are not being used. For example, an app that only used JSONP for <code>$.ajax()</code> and did not need to calculate offsets or positions of elements could exclude the offset and ajax/xhr modules.</p> <p>Any module may be excluded except for <code>core</code>, and <code>selector</code>. To exclude a module, pass its path relative to the <code>src</code> folder (without the <code>.js</code> extension).</p> <p>Some example modules that can be excluded are:</p> <ul class="task-list"> <li> <strong>ajax</strong>: All AJAX functionality: <code>$.ajax()</code>, <code>$.get()</code>, <code>$.post()</code>, <code>$.ajaxSetup()</code>, <code>.load()</code>, transports, and ajax event shorthands such as <code>.ajaxStart()</code>.</li> <li> <strong>ajax/xhr</strong>: The XMLHTTPRequest AJAX transport only.</li> <li> <strong>ajax/script</strong>: The <code>&lt;script&gt;</code> AJAX transport only; used to retrieve scripts.</li> <li> <strong>ajax/jsonp</strong>: The JSONP AJAX transport only; depends on the ajax/script transport.</li> <li> <strong>css</strong>: The <code>.css()</code> method plus non-animated <code>.show()</code>, <code>.hide()</code> and <code>.toggle()</code>. Also removes <strong>all</strong> modules depending on css (including <strong>effects</strong>, <strong>dimensions</strong>, and <strong>offset</strong>).</li> <li> <strong>deprecated</strong>: Methods documented as deprecated but not yet removed.</li> <li> <strong>dimensions</strong>: The <code>.width()</code> and <code>.height()</code> methods, including <code>inner-</code> and <code>outer-</code> variations.</li> <li> <strong>effects</strong>: The <code>.animate()</code> method and its shorthands such as <code>.slideUp()</code> or <code>.hide("slow")</code>.</li> <li> <strong>event</strong>: The <code>.on()</code> and <code>.off()</code> methods and all event functionality. Also removes <code>event/alias</code>.</li> <li> <strong>event/alias</strong>: All event attaching/triggering shorthands like <code>.click()</code> or <code>.mouseover()</code>.</li> <li> <strong>offset</strong>: The <code>.offset()</code>, <code>.position()</code>, <code>.offsetParent()</code>, <code>.scrollLeft()</code>, and <code>.scrollTop()</code> methods.</li> <li> <strong>wrap</strong>: The <code>.wrap()</code>, <code>.wrapAll()</code>, <code>.wrapInner()</code>, and <code>.unwrap()</code> methods.</li> <li> <strong>core/ready</strong>: Exclude the ready module if you place your scripts at the end of the body. Any ready callbacks bound with <code>jQuery()</code> will simply be called immediately. However, <code>jQuery(document).ready()</code> will not be a function and <code>.on("ready", ...)</code> or similar will not be triggered.</li> <li> <strong>deferred</strong>: Exclude jQuery.Deferred. This also removes jQuery.Callbacks. <em>Note</em> that modules that depend on jQuery.Deferred(AJAX, effects, core/ready) will not be removed and will still expect jQuery.Deferred to be there. Include your own jQuery.Deferred implementation or exclude those modules as well (<code>grunt custom:-deferred,-ajax,-effects,-core/ready</code>).</li> <li> <strong>exports/global</strong>: Exclude the attachment of global jQuery variables ($ and jQuery) to the window.</li> <li> <strong>exports/amd</strong>: Exclude the AMD definition.</li> </ul> <p>As a special case, you may also replace Sizzle by using a special flag <code>grunt custom:-sizzle</code>.</p> <ul class="task-list"> <li> <strong>sizzle</strong>: The Sizzle selector engine. When this module is excluded, it is replaced by a rudimentary selector engine based on the browser\'s <code>querySelectorAll</code> method that does not support jQuery selector extensions or enhanced semantics. See the <a href="https://github.com/jquery/jquery/blob/master/src/selector-native.js">selector-native.js</a> file for details.</li> </ul> <p><em>Note</em>: Excluding Sizzle will also exclude all jQuery selector extensions (such as <code>effects/animatedSelector</code> and <code>css/hiddenVisibleSelectors</code>).</p> <p><em>Note</em>: Removing Sizzle is not supported on the <code>compat</code> branch.</p> <p>The build process shows a message for each dependent module it excludes or includes.</p> <h5> <a id="user-content-amd-name" class="anchor" href="#amd-name" aria-hidden="true"><span class="octicon octicon-link"></span></a>AMD name</h5> <p>As an option, you can set the module name for jQuery\'s AMD definition. By default, it is set to "jquery", which plays nicely with plugins and third-party libraries, but there may be cases where you\'d like to change this. Simply set the <code>"amd"</code> option:</p> <div class="highlight highlight-bash"><pre>grunt custom --amd=<span class="pl-s"><span class="pl-pds">"</span>custom-name<span class="pl-pds">"</span></span></pre></div> <p>Or, to define anonymously, set the name to an empty string.</p> <div class="highlight highlight-bash"><pre>grunt custom --amd=<span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span></pre></div> <h4> <a id="user-content-custom-build-examples" class="anchor" href="#custom-build-examples" aria-hidden="true"><span class="octicon octicon-link"></span></a>Custom Build Examples</h4> <p>To create a custom build, first check out the version:</p> <div class="highlight highlight-bash"><pre>git pull<span class="pl-k">;</span> git checkout VERSION</pre></div> <p>Where VERSION is the version you want to customize. Then, make sure all Node dependencies are installed:</p> <div class="highlight highlight-bash"><pre>npm install</pre></div> <p>Create the custom build using the <code>grunt custom</code> option, listing the modules to be excluded.</p> <p>Exclude all <strong>ajax</strong> functionality:</p> <div class="highlight highlight-bash"><pre>grunt custom:-ajax</pre></div> <p>Excluding <strong>css</strong> removes modules depending on CSS: <strong>effects</strong>, <strong>offset</strong>, <strong>dimensions</strong>.</p> <div class="highlight highlight-bash"><pre>grunt custom:-css</pre></div> <p>Exclude a bunch of modules:</p> <div class="highlight highlight-bash"><pre>grunt custom:-ajax,-css,-deprecated,-dimensions,-effects,-event/alias,-offset,-wrap</pre></div> <p>For questions or requests regarding custom builds, please start a thread on the <a href="https://forum.jquery.com/developing-jquery-core">Developing jQuery Core</a> section of the forum. Due to the combinatorics and custom nature of these builds, they are not regularly tested in jQuery\'s unit test process. The non-Sizzle selector engine currently does not pass unit tests because it is missing too much essential functionality.</p> <h2> <a id="user-content-running-the-unit-tests" class="anchor" href="#running-the-unit-tests" aria-hidden="true"><span class="octicon octicon-link"></span></a>Running the Unit Tests</h2> <p>Make sure you have the necessary dependencies:</p> <div class="highlight highlight-bash"><pre>npm install</pre></div> <p>Start <code>grunt watch</code> or <code>npm start</code> to auto-build jQuery as you work:</p> <div class="highlight highlight-bash"><pre><span class="pl-c1">cd</span> jquery <span class="pl-k">&amp;&amp;</span> grunt watch</pre></div> <p>Run the unit tests with a local server that supports PHP. Ensure that you run the site from the root directory, not the "test" directory. No database is required. Pre-configured php local servers are available for Windows and Mac. Here are some options:</p> <ul class="task-list"> <li>Windows: <a href="http://www.wampserver.com/en/">WAMP download</a> </li> <li>Mac: <a href="http://www.mamp.info/en/index.html">MAMP download</a> </li> <li>Linux: <a href="https://www.linux.com/learn/tutorials/288158-easy-lamp-server-installation">Setting up LAMP</a> </li> <li><a href="http://code.google.com/p/mongoose/">Mongoose (most platforms)</a></li> </ul> <h2> <a id="user-content-building-to-a-different-directory" class="anchor" href="#building-to-a-different-directory" aria-hidden="true"><span class="octicon octicon-link"></span></a>Building to a different directory</h2> <p>To copy the built jQuery files from <code>/dist</code> to another directory:</p> <div class="highlight highlight-bash"><pre>grunt <span class="pl-k">&amp;&amp;</span> grunt dist:/path/to/special/location/</pre></div> <p>With this example, the output files would be:</p> <div class="highlight highlight-bash"><pre>/path/to/special/location/jquery.js /path/to/special/location/jquery.min.js</pre></div> <p>To add a permanent copy destination, create a file in <code>dist/</code> called ".destination.json". Inside the file, paste and customize the following:</p> <div class="highlight highlight-json"><pre>{ <span class="pl-s"><span class="pl-pds">"</span>/Absolute/path/to/other/destination<span class="pl-pds">"</span></span>: <span class="pl-c1">true</span> }</pre></div> <p>Additionally, both methods can be combined.</p> <h2> <a id="user-content-essential-git" class="anchor" href="#essential-git" aria-hidden="true"><span class="octicon octicon-link"></span></a>Essential Git</h2> <p>As the source code is handled by the Git version control system, it\'s useful to know some features used.</p> <h3> <a id="user-content-cleaning" class="anchor" href="#cleaning" aria-hidden="true"><span class="octicon octicon-link"></span></a>Cleaning</h3> <p>If you want to purge your working directory back to the status of upstream, the following commands can be used (remember everything you\'ve worked on is gone after these):</p> <div class="highlight highlight-bash"><pre>git reset --hard upstream/master git clean -fdx</pre></div> <h3> <a id="user-content-rebasing" class="anchor" href="#rebasing" aria-hidden="true"><span class="octicon octicon-link"></span></a>Rebasing</h3> <p>For feature/topic branches, you should always use the <code>--rebase</code> flag to <code>git pull</code>, or if you are usually handling many temporary "to be in a github pull request" branches, run the following to automate this:</p> <div class="highlight highlight-bash"><pre>git config branch.autosetuprebase <span class="pl-k">local</span></pre></div> <p>(see <code>man git-config</code> for more information)</p> <h3> <a id="user-content-handling-merge-conflicts" class="anchor" href="#handling-merge-conflicts" aria-hidden="true"><span class="octicon octicon-link"></span></a>Handling merge conflicts</h3> <p>If you\'re getting merge conflicts when merging, instead of editing the conflicted files manually, you can use the feature <code>git mergetool</code>. Even though the default tool <code>xxdiff</code> looks awful/old, it\'s rather useful.</p> <p>The following are some commands that can be used there:</p> <ul class="task-list"> <li> <code>Ctrl + Alt + M</code> - automerge as much as possible</li> <li> <code>b</code> - jump to next merge conflict</li> <li> <code>s</code> - change the order of the conflicted lines</li> <li> <code>u</code> - undo a merge</li> <li> <code>left mouse button</code> - mark a block to be the winner</li> <li> <code>middle mouse button</code> - mark a line to be the winner</li> <li> <code>Ctrl + S</code> - save</li> <li> <code>Ctrl + Q</code> - quit</li> </ul> <h2> <a id="user-content-qunit-reference" class="anchor" href="#qunit-reference" aria-hidden="true"><span class="octicon octicon-link"></span></a> <a href="http://api.qunitjs.com">QUnit</a> Reference</h2> <h3> <a id="user-content-test-methods" class="anchor" href="#test-methods" aria-hidden="true"><span class="octicon octicon-link"></span></a>Test methods</h3> <div class="highlight highlight-js"><pre>expect( numAssertions ); <span class="pl-c1">stop</span>(); start();</pre></div> <p><em>Note</em>: QUnit\'s eventual addition of an argument to stop/start is ignored in this test suite so that start and stop can be passed as callbacks without worrying about their parameters.</p> <h3> <a id="user-content-test-assertions" class="anchor" href="#test-assertions" aria-hidden="true"><span class="octicon octicon-link"></span></a>Test assertions</h3> <div class="highlight highlight-js"><pre>ok( value, [message] ); equal( actual, expected, [message] ); notEqual( actual, expected, [message] ); deepEqual( actual, expected, [message] ); notDeepEqual( actual, expected, [message] ); strictEqual( actual, expected, [message] ); notStrictEqual( actual, expected, [message] ); throws( block, [expected], [message] );</pre></div> <h2> <a id="user-content-test-suite-convenience-methods-reference-see-testdatatestinitjs" class="anchor" href="#test-suite-convenience-methods-reference-see-testdatatestinitjs" aria-hidden="true"><span class="octicon octicon-link"></span></a>Test Suite Convenience Methods Reference (See <a href="https://github.com/jquery/jquery/blob/master/test/data/testinit.js">test/data/testinit.js</a>)</h2> <h3> <a id="user-content-returns-an-array-of-elements-with-the-given-ids" class="anchor" href="#returns-an-array-of-elements-with-the-given-ids" aria-hidden="true"><span class="octicon octicon-link"></span></a>Returns an array of elements with the given IDs</h3> <div class="highlight highlight-js"><pre>q( ... );</pre></div> <p>Example:</p> <div class="highlight highlight-js"><pre>q(<span class="pl-s"><span class="pl-pds">"</span>main<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>foo<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>bar<span class="pl-pds">"</span></span>); <span class="pl-k">=&gt;</span> [ div#main, span#foo, input#bar ]</pre></div> <h3> <a id="user-content-asserts-that-a-selection-matches-the-given-ids" class="anchor" href="#asserts-that-a-selection-matches-the-given-ids" aria-hidden="true"><span class="octicon octicon-link"></span></a>Asserts that a selection matches the given IDs</h3> <div class="highlight highlight-js"><pre>t( testName, selector, [ <span class="pl-s"><span class="pl-pds">"</span>array<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>of<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>ids<span class="pl-pds">"</span></span> ] );</pre></div> <p>Example:</p> <div class="highlight highlight-js"><pre>t(<span class="pl-s"><span class="pl-pds">"</span>Check for something<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>//[a]<span class="pl-pds">"</span></span>, [<span class="pl-s"><span class="pl-pds">"</span>foo<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>baar<span class="pl-pds">"</span></span>]);</pre></div> <h3> <a id="user-content-fires-a-native-dom-event-without-going-through-jquery" class="anchor" href="#fires-a-native-dom-event-without-going-through-jquery" aria-hidden="true"><span class="octicon octicon-link"></span></a>Fires a native DOM event without going through jQuery</h3> <div class="highlight highlight-js"><pre>fireNative( node, eventType )</pre></div> <p>Example:</p> <div class="highlight highlight-js"><pre>fireNative( jQuery(<span class="pl-s"><span class="pl-pds">"</span>#elem<span class="pl-pds">"</span></span>)[<span class="pl-c1">0</span>], <span class="pl-s"><span class="pl-pds">"</span>click<span class="pl-pds">"</span></span> );</pre></div> <h3> <a id="user-content-add-random-number-to-url-to-stop-caching" class="anchor" href="#add-random-number-to-url-to-stop-caching" aria-hidden="true"><span class="octicon octicon-link"></span></a>Add random number to url to stop caching</h3> <div class="highlight highlight-js"><pre>url( <span class="pl-s"><span class="pl-pds">"</span>some/url.php<span class="pl-pds">"</span></span> );</pre></div> <p>Example:</p> <div class="highlight highlight-js"><pre>url(<span class="pl-s"><span class="pl-pds">"</span>data/test.html<span class="pl-pds">"</span></span>); <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>data/test.html?10538358428943<span class="pl-pds">"</span></span> url(<span class="pl-s"><span class="pl-pds">"</span>data/test.php?foo=bar<span class="pl-pds">"</span></span>); <span class="pl-k">=&gt;</span> <span class="pl-s"><span class="pl-pds">"</span>data/test.php?foo=bar&amp;10538358345554<span class="pl-pds">"</span></span></pre></div> <h3> <a id="user-content-load-tests-in-an-iframe" class="anchor" href="#load-tests-in-an-iframe" aria-hidden="true"><span class="octicon octicon-link"></span></a>Load tests in an iframe</h3> <p>Loads a given page constructing a url with fileName: <code>"./data/" + fileName + ".html"</code> and fires the given callback on jQuery ready (using the jQuery loading from that page) and passes the iFrame\'s jQuery to the callback.</p> <div class="highlight highlight-js"><pre>testIframe( fileName, testName, callback );</pre></div> <p>Callback arguments:</p> <div class="highlight highlight-js"><pre>callback( jQueryFromIFrame, iFrameWindow, iFrameDocument );</pre></div> <h3> <a id="user-content-load-tests-in-an-iframe-windowiframecallback" class="anchor" href="#load-tests-in-an-iframe-windowiframecallback" aria-hidden="true"><span class="octicon octicon-link"></span></a>Load tests in an iframe (window.iframeCallback)</h3> <p>Loads a given page constructing a url with fileName: <code>"./data/" + fileName + ".html"</code> The given callback is fired when window.iframeCallback is called by the page. The arguments passed to the callback are the same as the arguments passed to window.iframeCallback, whatever that may be.</p> <div class="highlight highlight-js"><pre>testIframeWithCallback( testName, fileName, callback );</pre></div> <h2> <a id="user-content-questions" class="anchor" href="#questions" aria-hidden="true"><span class="octicon octicon-link"></span></a>Questions?</h2> <p>If you have any questions, please feel free to ask on the <a href="http://forum.jquery.com/developing-jquery-core">Developing jQuery Core forum</a> or in #jquery on irc.freenode.net.</p>',
                        created_by: 'Jesse Holmes',
                        created_date: '2014-04-13 16:50',
                        favourite: false,
                        last_update: [
                            {
                                user: 'John Doe',
                                datetime: '2014-10-13T16:50:11',
                                avatar: 'img/avatar1.jpg'
                            }
                        ],
                        comments: []
                    },
                    {
                        document_id: 3,
                        title: 'Express',
                        content: '<p><a href="http://expressjs.com/"><img src="https://camo.githubusercontent.com/fc61dcbdb7a6e49d3adecc12194b24ab20dfa25b/68747470733a2f2f692e636c6f756475702e636f6d2f7a6659366c4c376546612d3330303078333030302e706e67" alt="Express Logo" data-canonical-src="https://i.cloudup.com/zfY6lL7eFa-3000x3000.png" style="max-width:100%;"></a></p> <p>Fast, unopinionated, minimalist web framework for <a href="http://nodejs.org">node</a>.</p> <p><a href="https://www.npmjs.org/package/express"><img src="https://camo.githubusercontent.com/cfabe9f86640e83ea6a719152d3fc45ac232d553/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f657870726573732e7376673f7374796c653d666c6174" alt="NPM Version" data-canonical-src="https://img.shields.io/npm/v/express.svg?style=flat" style="max-width:100%;"></a> <a href="https://travis-ci.org/strongloop/express"><img src="https://camo.githubusercontent.com/72f4811b90eb01729b6b4403d7b3ea5dbde42d3b/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f7374726f6e676c6f6f702f657870726573732e7376673f7374796c653d666c6174" alt="Build Status" data-canonical-src="https://img.shields.io/travis/strongloop/express.svg?style=flat" style="max-width:100%;"></a> <a href="https://coveralls.io/r/strongloop/express"><img src="https://camo.githubusercontent.com/243630d9a82b25e67edeb5a5e08cd07da8e743ea/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f7374726f6e676c6f6f702f657870726573732e7376673f7374796c653d666c6174" alt="Coverage Status" data-canonical-src="https://img.shields.io/coveralls/strongloop/express.svg?style=flat" style="max-width:100%;"></a> <a href="https://www.gittip.com/dougwilson/"><img src="https://camo.githubusercontent.com/48d3336fc5e9f80a1b8e4bc2b788c6f7f346c577/68747470733a2f2f696d672e736869656c64732e696f2f6769747469702f646f756777696c736f6e2e7376673f7374796c653d666c6174" alt="Gittip" data-canonical-src="https://img.shields.io/gittip/dougwilson.svg?style=flat" style="max-width:100%;"></a></p> <div class="highlight highlight-js"><pre><span class="kd">var</span> <span class="nx">express</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">express</span><span class="p">)</span> <span class="kd">var</span> <span class="nx">app</span> <span class="o">=</span> <span class="nx">express</span><span class="p">()</span> <span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1"></span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span> <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="s1">Hello World</span><span class="p">)</span> <span class="p">})</span> <span class="nx">app</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="mi">3000</span><span class="p">)</span> </pre></div> <p><strong>PROTIP</strong> Be sure to read <a href="https://github.com/strongloop/express/wiki/Migrating-from-3.x-to-4.x">Migrating from 3.x to 4.x</a> as well as <a href="https://github.com/strongloop/express/wiki/New-features-in-4.x">New features in 4.x</a>.</p> <h3> <a name="user-content-installation" class="anchor" href="#installation" aria-hidden="true"><span class="octicon octicon-link"></span></a>Installation</h3> <div class="highlight highlight-bash"><pre><span class="nv">$ </span>npm install express </pre></div> <h2> <a name="user-content-quick-start" class="anchor" href="#quick-start" aria-hidden="true"><span class="octicon octicon-link"></span></a>Quick Start</h2> <p>The quickest way to get started with express is to utilize the executable <a href="https://github.com/expressjs/generator"><code>express(1)</code></a> to generate an application as shown below:</p> <p>Install the executable. The executables major version will match Expresss:</p> <div class="highlight highlight-bash"><pre><span class="nv">$ </span>npm install -g express-generator@4 </pre></div> <p>Create the app:</p> <div class="highlight highlight-bash"><pre><span class="nv">$ </span>express /tmp/foo <span class="o">&amp;&amp;</span> <span class="nb">cd</span> /tmp/foo </pre></div> <p>Install dependencies:</p> <div class="highlight highlight-bash"><pre><span class="nv">$ </span>npm install </pre></div> <p>Start the server:</p> <div class="highlight highlight-bash"><pre><span class="nv">$ </span>npm start </pre></div> <h2> <a name="user-content-features" class="anchor" href="#features" aria-hidden="true"><span class="octicon octicon-link"></span></a>Features</h2> <ul> <li>Robust routing</li> <li>HTTP helpers (redirection, caching, etc)</li> <li>View system supporting 14+ template engines</li> <li>Content negotiation</li> <li>Focus on high performance</li> <li>Executable for generating applications quickly</li> <li>High test coverage</li> </ul><h2> <a name="user-content-philosophy" class="anchor" href="#philosophy" aria-hidden="true"><span class="octicon octicon-link"></span></a>Philosophy</h2> <p>The Express philosophy is to provide small, robust tooling for HTTP servers, making it a great solution for single page applications, web sites, hybrids, or public HTTP APIs.</p> <p>Express does not force you to use any specific ORM or template engine. With support for over 14 template engines via <a href="https://github.com/visionmedia/consolidate.js">Consolidate.js</a>, you can quickly craft your perfect framework.</p> <h2> <a name="user-content-more-information" class="anchor" href="#more-information" aria-hidden="true"><span class="octicon octicon-link"></span></a>More Information</h2> <ul> <li> <a href="http://expressjs.com/">Website and Documentation</a> - [<a href="https://github.com/strongloop/expressjs.com">website repo</a>]</li> <li> <a href="https://github.com/expressjs">Github Organization</a> for Official Middleware &amp; Modules</li> <li> <a href="https://webchat.freenode.net/?channels=express">#express</a> on freenode IRC</li> <li>Visit the <a href="https://github.com/strongloop/express/wiki">Wiki</a> </li> <li> <a href="https://groups.google.com/group/express-js">Google Group</a> for discussion</li> <li><a href="http://jsman.ru/express/">Русскоязычная документация</a></li> <li> <a href="http://expressjs.kr">한국어 문서</a> - [<a href="https://github.com/Hanul/expressjs.kr">website repo</a>]</li> <li>Run express examples <a href="https://runnable.com/express">online</a> </li> </ul><h2> <a name="user-content-viewing-examples" class="anchor" href="#viewing-examples" aria-hidden="true"><span class="octicon octicon-link"></span></a>Viewing Examples</h2> <p>Clone the Express repo, then install the dev dependencies to install all the example / test suite dependencies:</p> <div class="highlight highlight-bash"><pre><span class="nv">$ </span>git clone git://github.com/strongloop/express.git --depth 1 <span class="nv">$ </span><span class="nb">cd </span>express <span class="nv">$ </span>npm install </pre></div> <p>Then run whichever example you want:</p> <pre><code>$ node examples/content-negotiation </code></pre> <p>You can also view live examples here:</p> <p><a href="https://runnable.com/express" target="_blank"><img src="https://camo.githubusercontent.com/8879278af6f815124673a3c96cc7c3ce5ca3da71/68747470733a2f2f72756e6e61626c652e636f6d2f65787465726e616c2f7374796c65732f6173736574732f72756e6e61626c6562746e2e706e67" data-canonical-src="https://runnable.com/external/styles/assets/runnablebtn.png" style="max-width:100%;"></a></p> <h2> <a name="user-content-running-tests" class="anchor" href="#running-tests" aria-hidden="true"><span class="octicon octicon-link"></span></a>Running Tests</h2> <p>To run the test suite, first invoke the following command within the repo, installing the development dependencies:</p> <div class="highlight highlight-bash"><pre><span class="nv">$ </span>npm install </pre></div> <p>Then run the tests:</p> <div class="highlight highlight-bash"><pre><span class="nv">$ </span>npm <span class="nb">test</span> </pre></div> <h3> <a name="user-content-contributors" class="anchor" href="#contributors" aria-hidden="true"><span class="octicon octicon-link"></span></a>Contributors</h3> <ul> <li>Author: <a href="https://github.com/visionmedia">TJ Holowaychuk</a> </li> <li>Lead Maintainer: <a href="https://github.com/dougwilson">Douglas Christopher Wilson</a> </li> <li><a href="https://github.com/strongloop/express/graphs/contributors">All Contributors</a></li> </ul><h3> <a name="user-content-license" class="anchor" href="#license" aria-hidden="true"><span class="octicon octicon-link"></span></a>License</h3> <p><a href="/strongloop/express/blob/master/LICENSE">MIT</a></p>',
                        created_by: 'Jesse Holmes',
                        created_date: '2014-04-13 12:50',
                        favourite: false,
                        last_update: [
                            {
                                user: 'Omar Little',
                                datetime: '2014-10-13T16:50:11',
                                avatar: 'img/avatar1.jpg'
                            }
                        ],
                        comments: []
                    },
                    {
                        document_id: 4,
                        title: 'NodeJS',
                        content: '<h1><a id="user-content-evented-io-for-v8-javascript" class="anchor" href="#evented-io-for-v8-javascript" aria-hidden="true"><span class="octicon octicon-link"></span></a>Evented I/O for V8 javascript.</h1><h3><a id="user-content-to-build" class="anchor" href="#to-build" aria-hidden="true"><span class="octicon octicon-link"></span></a>To build:</h3><p>Prerequisites (Unix only):</p><pre><code>* GCC 4.2 or newer * G++ 4.2 or newer * Python 2.6 or 2.7 * GNU Make 3.81 or newer * libexecinfo (FreeBSD and OpenBSD only) </code></pre><p>Unix/Macintosh:</p><div class="highlight highlight-sh"><pre>./configure make make install</pre></div><p>If your python binary is in a non-standard location or has anon-standard name, run the following instead:</p><div class="highlight highlight-sh"><pre><span class="pl-k">export</span> PYTHON=/path/to/python <span class="pl-smi">$PYTHON</span> ./configure make make install</pre></div><p>Prerequisites (Windows only):</p><pre><code>* Python 2.6 or 2.7 * Visual Studio 2010 or 2012 </code></pre><p>Windows:</p><div class="highlight highlight-sh"><pre>vcbuild nosign</pre></div><p>You can download pre-built binaries for various operating systems from<a href="http://nodejs.org/download/">http://nodejs.org/download/</a>. The Windowsand OS X installers will prompt you for the location in which to install.The tarballs are self-contained; you can extract them to a local directorywith:</p><div class="highlight highlight-sh"><pre>tar xzf /path/to/node-<span class="pl-k"><</span>version<span class="pl-k">></span>-<span class="pl-k"><</span>platform<span class="pl-k">></span>-<span class="pl-k"><</span>arch<span class="pl-k">></span>.tar.gz</pre></div><p>Or system-wide with:</p><div class="highlight highlight-sh"><pre><span class="pl-c1">cd</span> /usr/local <span class="pl-k">&&</span> tar --strip-components 1 -xzf \ /path/to/node-<span class="pl-k"><</span>version<span class="pl-k">></span>-<span class="pl-k"><</span>platform<span class="pl-k">></span>-<span class="pl-k"><</span>arch<span class="pl-k">></span>.tar.gz</pre></div><h3><a id="user-content-to-run-the-tests" class="anchor" href="#to-run-the-tests" aria-hidden="true"><span class="octicon octicon-link"></span></a>To run the tests:</h3><p>Unix/Macintosh:</p><div class="highlight highlight-sh"><pre>make <span class="pl-c1">test</span></pre></div><p>Windows:</p><div class="highlight highlight-sh"><pre>vcbuild <span class="pl-c1">test</span></pre></div><h3><a id="user-content-to-build-the-documentation" class="anchor" href="#to-build-the-documentation" aria-hidden="true"><span class="octicon octicon-link"></span></a>To build the documentation:</h3><div class="highlight highlight-sh"><pre>make doc</pre></div><h3><a id="user-content-to-read-the-documentation" class="anchor" href="#to-read-the-documentation" aria-hidden="true"><span class="octicon octicon-link"></span></a>To read the documentation:</h3><div class="highlight highlight-sh"><pre>./configure make make install</pre>0</div><h3><a id="user-content-intl-ecma-402-support" class="anchor" href="#intl-ecma-402-support" aria-hidden="true"><span class="octicon octicon-link"></span></a><code>Intl</code> (ECMA-402) support:</h3><p><a href="https://github.com/joyent/node/wiki/Intl">Intl</a> support is notenabled by default.</p><h4><a id="user-content-small-english-only-support" class="anchor" href="#small-english-only-support" aria-hidden="true"><span class="octicon octicon-link"></span></a>"small" (English only) support</h4><p>This option will build with "small" (English only) support, butthe full <code>Intl</code> (ECMA-402) APIs. With <code>--download=all</code> it willdownload the ICU library as needed.</p><p>Unix/Macintosh:</p><div class="highlight highlight-sh"><pre>./configure make make install</pre>1</div><p>Windows:</p><div class="highlight highlight-sh"><pre>./configure make make install</pre>2</div><p>The <code>small-icu</code> mode buildswith English-only data. You can add full data at runtime.</p><p><em>Note:</em> more docs are on<a href="https://github.com/joyent/node/wiki/Intl">the wiki</a>.</p><h4><a id="user-content-build-with-full-icu-support-all-locales-supported-by-icu" class="anchor" href="#build-with-full-icu-support-all-locales-supported-by-icu" aria-hidden="true"><span class="octicon octicon-link"></span></a>Build with full ICU support (all locales supported by ICU):</h4><p>With the <code>--download=all</code>, this may download ICU if you don\'thave an ICU in <code>deps/icu</code>.</p><p>Unix/Macintosh:</p><div class="highlight highlight-sh"><pre>./configure make make install</pre>3</div><p>Windows:</p><div class="highlight highlight-sh"><pre>./configure make make install</pre>4</div><h4><a id="user-content-build-with-no-intl-support--" class="anchor" href="#build-with-no-intl-support--" aria-hidden="true"><span class="octicon octicon-link"></span></a>Build with no Intl support <code>:-(</code></h4><p>The <code>Intl</code> object will not be available.This is the default at present, so this option is not normally needed.</p><p>Unix/Macintosh:</p><div class="highlight highlight-sh"><pre>./configure make make install</pre>5</div><p>Windows:</p><div class="highlight highlight-sh"><pre>./configure make make install</pre>6</div><h4><a id="user-content-use-existing-installed-icu-unixmacintosh-only" class="anchor" href="#use-existing-installed-icu-unixmacintosh-only" aria-hidden="true"><span class="octicon octicon-link"></span></a>Use existing installed ICU (Unix/Macintosh only):</h4><div class="highlight highlight-sh"><pre>./configure make make install</pre>7</div><h4><a id="user-content-build-with-a-specific-icu" class="anchor" href="#build-with-a-specific-icu" aria-hidden="true"><span class="octicon octicon-link"></span></a>Build with a specific ICU:</h4><p>You can find other ICU releases at<a href="http://icu-project.org/download">the ICU homepage</a>.Download the file named something like <code>icu4c-**##.#**-src.tgz</code> (or<code>.zip</code>).</p><p>Unix/Macintosh: from an already-unpacked ICU</p><div class="highlight highlight-sh"><pre>./configure make make install</pre>8</div><p>Unix/Macintosh: from a local ICU tarball</p><div class="highlight highlight-sh"><pre>./configure make make install</pre>9</div><p>Unix/Macintosh: from a tarball URL</p><div class="highlight highlight-sh"><pre><span class="pl-k">export</span> PYTHON=/path/to/python <span class="pl-smi">$PYTHON</span> ./configure make make install</pre>0</div><p>Windows: first unpack latest ICU to <code>deps/icu</code> <a href="http://icu-project.org/download">icu4c-<strong>##.#</strong>-src.tgz</a> (or <code>.zip</code>) as <code>deps/icu</code> (You\'ll have: <code>deps/icu/source/...</code>)</p><div class="highlight highlight-sh"><pre><span class="pl-k">export</span> PYTHON=/path/to/python <span class="pl-smi">$PYTHON</span> ./configure make make install</pre>1</div><h2><a id="user-content-resources-for-newcomers" class="anchor" href="#resources-for-newcomers" aria-hidden="true"><span class="octicon octicon-link"></span></a>Resources for Newcomers</h2><ul class="task-list"><li><a href="https://github.com/joyent/node/wiki">The Wiki</a></li><li><a href="http://nodejs.org/">nodejs.org</a></li><li><a href="http://www.joyent.com/blog/installing-node-and-npm/">how to install node.js and npm (node package manager)</a></li><li><a href="https://github.com/joyent/node/wiki/modules">list of modules</a></li><li><a href="http://npmjs.org/">searching the npm registry</a></li><li><a href="https://github.com/joyent/node/wiki/Projects,-Applications,-and-Companies-Using-Node">list of companies and projects using node</a></li><li><a href="http://groups.google.com/group/nodejs">node.js mailing list</a></li><li><a href="http://webchat.freenode.net?channels=node.js&amp;uio=d4">irc chatroom, #node.js on freenode.net</a></li><li><a href="https://github.com/joyent/node/wiki/Community">community</a></li><li><a href="https://github.com/joyent/node/wiki/Contributing">contributing</a></li><li><a href="https://github.com/joyent/node/wiki/_pages">big list of all the helpful wiki pages</a></li></ul>',
                        created_by: 'Jesse Holmes',
                        created_date: '2014-04-13 15:50',
                        favourite: false,
                        last_update: [],
                        comments: []
                    },
                    {
                        document_id: 5,
                        title: 'YeApp documents',
                        content: '<h4></h4><h4></h4><h4></h4><h4></h4><h3>YeApp documents</h3><p></p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum<div><br/></div><pre>chown root:root /etc/init.d/transmission-daemon</pre><div><ol><li>qui officia <b>deserunt </b>mollit anim id est laborum</li><li>smod <u>tempor </u>incididunt ut <b>labore </b>et do</li><li>agna aliqua. Ut enim ad min</li><li>ostrud <b>exercitation </b><i>ullamco </i>la</li><li>ip ex ea commodo consequat. Duis aute irure dolor in <b><i>reprehenderit </i></b>in voluptate&#160;</li></ol><b></b><div><b>Bold text</b></div><div><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum</p><p><br/></p><pre>mysql&gt;select * from companies</pre><p><br/></p><p><i>*te irure dolor in reprehenderit in voluptate velit esse</i>&#160;</p><p><span>mmodo <a href="http://google.com">consequat</a>. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum</span></p><div><blockquote><p><span>lorem ispum dolor&#160;</span></p></blockquote><div></div></div></div></div>',
                        created_by: 'Jesse Holmes',
                        created_date: '2014-04-13 20:50',
                        favourite: false,
                        last_update: [],
                        comments: []
                    }
                ];
            };
        });


})();